---
import { SITE } from "../consts";
import { ClientRouter } from "astro:transitions";

type Props = {
  title: string;
  description: string;
};

const { title, description } = Astro.props;
---
<meta charset="UTF-8">
<link rel="icon" type="image/x-icon" href={SITE.AVATAR}>
<link rel="alternate" type="application/rss+xml" title={SITE.TITLE} href={new URL("rss.xml", Astro.site)} />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>{ title && title + " - " }{SITE.TITLE}</title>
<meta name="description" content  = { description ? description : SITE.DESCRIPTION } />

<ClientRouter />

<script>
    function init() {
        let headerElement = document.getElementById('header');
        let avatarElement = document.getElementById('avatar');
        let HeaderButtonBackToTopElement = document.getElementById('HeaderButtonBackToTop');
        let HeaderButtonBackElement = document.getElementById('HeaderButtonBack');

        HeaderButtonBackToTopElement?.addEventListener('click', (event) => scrollToTop(event));
        HeaderButtonBackElement?.addEventListener('click', () => window.history.back());

        stickyHeader(headerElement, HeaderButtonBackToTopElement, avatarElement);
        updateTheme();
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', updateTheme);
    }

    function updateTheme() {
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
            document.documentElement.classList.add('dark');
        } else {
            document.documentElement.classList.remove('dark');
        }
    }

    function stickyHeader(headerElement: HTMLElement, HeaderButtonBackToTopElement: HTMLElement, avatarElement: HTMLElement) {
        const stickyHeaderClass = [
            'border-b',
            'border-neutral-200/70',
            'backdrop-blur-lg',
            'bg-white/70',
            'dark:border-neutral-800/70',
            'dark:bg-neutral-900/70',
        ];
        const unstickyHeaderClass = [
            'border-transparent',
        ];
        window.addEventListener('scroll', function() {
            if (window.scrollY > 16) {
                headerElement.classList.add(...stickyHeaderClass);
                headerElement.classList.remove(...unstickyHeaderClass);

                HeaderButtonBackToTopElement.classList.add('flex');
                HeaderButtonBackToTopElement.classList.remove('hidden');
            } else {
                headerElement.classList.add(...unstickyHeaderClass);
                headerElement.classList.remove(...stickyHeaderClass);

                HeaderButtonBackToTopElement.classList.add('hidden');
                HeaderButtonBackToTopElement.classList.remove('flex');
            }
        }, { passive: true })
    }

    function scrollToTop(event: MouseEvent) {
        event.preventDefault();
        window.scrollTo({
            top: 0,
            behavior: "smooth"
        });
    }

    document.addEventListener('DOMContentLoaded', () => init());
    document.addEventListener('astro:after-swap', () => init());
    document.addEventListener('astro:before-preparation', () => {
        document.getElementById('loadingIcon').style.display = 'block'
        document.getElementById('main').classList.add('blur')
    });
    document.addEventListener('astro:page-load', () => {
        document.getElementById('loadingIcon').style.display = 'none'
        document.getElementById('main').classList.remove('blur')
    });
    document.body.addEventListener('touchstart', () => {}, { passive: true });
</script>

<style>
    @font-face {
		font-family: 'zql';
		src: url('https://res.jb18.cm/fonts/zql.woff2') format('woff2'),
			url('https://res.jb18.cm/fonts/zql.woff') format('woff');
		font-display: swap;
	}
    body {
		font-family: 'zql',"Arial", "Microsoft YaHei", "黑体", "宋体", sans-serif; 
        font-weight: 400;
	}
</style>